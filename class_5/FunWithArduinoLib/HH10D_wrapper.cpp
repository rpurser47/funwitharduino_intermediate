/*
  *
  *   --- THIS FILE GENERATED BY S-FUNCTION BUILDER: 3.0 ---
  *
  *   This file is a wrapper S-function produced by the S-Function
  *   Builder which only recognizes certain fields.  Changes made
  *   outside these fields will be lost the next time the block is
  *   used to load, edit, and resave this file. This file will be overwritten
  *   by the S-function Builder block. If you want to edit this file by hand, 
  *   you must change it only in the area defined as:  
  *
  *        %%%-SFUNWIZ_wrapper_XXXXX_Changes_BEGIN 
  *            Your Changes go here
  *        %%%-SFUNWIZ_wrapper_XXXXXX_Changes_END
  *
  *   For better compatibility with the Simulink Coder, the
  *   "wrapper" S-function technique is used.  This is discussed
  *   in the Simulink Coder User's Manual in the Chapter titled,
  *   "Wrapper S-functions".
  *
  *   Created: Mon Oct  7 16:17:24 2013
  */


/*
 * Include Files
 *
 */
#if defined(MATLAB_MEX_FILE)
#include "tmwtypes.h"
#include "simstruc_types.h"
#else
#include "rtwtypes.h"
#endif

/* %%%-SFUNWIZ_wrapper_includes_Changes_BEGIN --- EDIT HERE TO _END */
#ifndef MATLAB_MEX_FILE
 #include <Arduino.h>
 #include "./Wire/Wire.h"

 int hh10dInterrupt = 1; // On UNO, interrupt 0 is pin D2, interrupt 1 is pin D3
 float hh10dOffset;
 float hh10dSensitivity;
 unsigned long hh10dInterruptCount = 0;
 unsigned long hh10dFirstInterruptAt;
 unsigned long hh10dLatestInterruptAt;

 void hh10dInterruptHandler()
 {
   if (hh10dInterruptCount == 0)
   {
     hh10dFirstInterruptAt = micros();
   }
   hh10dLatestInterruptAt = micros();
   hh10dInterruptCount++;
 } 
 int i2cReadIntRegister(int deviceaddress, byte address)  
 {
   // SET ADDRESS
   Wire.beginTransmission(deviceaddress);
   Wire.write(address); // address for sensitivity
   Wire.endTransmission();
   
   // REQUEST RETURN VALUE
   Wire.requestFrom(deviceaddress, 2);
   return Wire.read() << 8 | Wire.read();
 } 
 double readHH10D()
 {
  unsigned long count;
  unsigned long start;
  unsigned long finish;
  
  // Capture the data from the ISR
  noInterrupts(); // Turn off interrupts momentarily to transfer data from ISR http://arduino.cc/en/Reference/noInterrupts
                  // Remember that these values change several thousand times per second!
  count = hh10dInterruptCount;
  start = hh10dFirstInterruptAt;
  finish = hh10dLatestInterruptAt;
  
  // Reset the ISR
  hh10dInterruptCount = 0;

  // Turn the interrupts back on 
  interrupts();

  float periodInUs;
 
  if (finish > start)
  {
    periodInUs = float(finish - start);
  }
  else
  {
    // See http://arduino.cc/en/Reference/Micros 
    // micros() will roll over every 70 minutes or so
    periodInUs = float(4294967295L - finish + start);
  }
  
  if(count < 1000 || periodInUs < 500000)
  {
    return 0.00;
  }
    
  // Calculate frequency
  float frequency = float(count) * 1000000.0 / periodInUs;
  return (double)(hh10dOffset-frequency)*hh10dSensitivity/4096.0;
}

#endif
/* %%%-SFUNWIZ_wrapper_includes_Changes_END --- EDIT HERE TO _BEGIN */
#define u_width 
#define y_width 1
/*
 * Create external references here.  
 *
 */
/* %%%-SFUNWIZ_wrapper_externs_Changes_BEGIN --- EDIT HERE TO _END */
/* extern double func(double a); */
/* %%%-SFUNWIZ_wrapper_externs_Changes_END --- EDIT HERE TO _BEGIN */

/*
 * Output functions
 *
 */
extern "C" void HH10D_Outputs_wrapper(real_T *Humidity ,
			      const real_T  *xD,
                          const int8_T  *interruptNum, const int_T  p_width0, 
                          const real_T  *sampleTime, const int_T p_width1)
{
/* %%%-SFUNWIZ_wrapper_Outputs_Changes_BEGIN --- EDIT HERE TO _END */
if (xD[0] == 1) {
    #ifndef MATLAB_MEX_FILE
        Humidity[0] = 0;
        Humidity[0] = readHH10D();
    #endif
}
/* %%%-SFUNWIZ_wrapper_Outputs_Changes_END --- EDIT HERE TO _BEGIN */
}

/*
  * Updates function
  *
  */
extern "C" void HH10D_Update_wrapper(const real_T *Humidity ,
                          real_T *xD, 
                          const int8_T  *interruptNum,  const int_T  p_width0,
                           const real_T *sampleTime, const int_T  p_width1)
{
  /* %%%-SFUNWIZ_wrapper_Update_Changes_BEGIN --- EDIT HERE TO _END */
if (xD[0] != 1) {
    #ifndef MATLAB_MEX_FILE
        #ifndef WIRE_LIB
            Wire.begin();
            #define WIRE_LIB 1
        #endif
        int hh10dAddress = 81;
        hh10dSensitivity   =  float(i2cReadIntRegister(hh10dAddress, 10)); //Read sensitivity from HH10D EEPROM
        hh10dOffset =  float(i2cReadIntRegister(hh10dAddress, 12)); //Same for offset
        attachInterrupt(interruptNum[0],hh10dInterruptHandler,RISING);
    #endif
    xD[0] = 1;
}
/* %%%-SFUNWIZ_wrapper_Update_Changes_END --- EDIT HERE TO _BEGIN */
}
